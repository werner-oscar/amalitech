name: Django-test

on:
  push:
    branches: [ staging ]
  pull_request:
    branches: [ staging ]

jobs:
  test-auto-pr:
    runs-on: ubuntu-latest
#     strategy:
#       max-parallel: 4
#       matrix:
#         python-version: [3.8]

#     strategy:
#       max-parallel: 4
#       matrix:
#         python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3.8
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install cmake
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        python manage.py test

  # prForMainBranch:
  #     runs-on: ubuntu-latest
  #     steps:
    - uses: actions/checkout@v2
      with:
        ref: main
    - name: Reset main branch
      run: |
        git fetch origin staging:staging
        git reset --hard staging
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v3
      with:
        commit-message: update main branch
        title: Update main branch
        branch: temp


    # - name: Expose git commit data
    #   uses: rlespinasse/git-commit-data-action@v1.x
      
    # - name: Print git commit data
    #   run: |
    #     echo "Get author info"
    #     echo " - ${{ env.GIT_COMMIT_AUTHOR }}"
    #     echo " - ${{ env.GIT_COMMIT_AUTHOR_NAME }}"
    #     echo " - ${{ env.GIT_COMMIT_AUTHOR_EMAIL }}"
    #     echo "Get committer info"
    #     echo " - ${{ env.GIT_COMMIT_COMMITTER }}"
    #     echo " - ${{ env.GIT_COMMIT_COMMITTER_NAME }}"
    #     echo " - ${{ env.GIT_COMMIT_COMMITTER_EMAIL }}"
    #     echo "Get message info"
    #     echo " - ${{ env.GIT_COMMIT_MESSAGE_SUBJECT }}"
    #     echo " - ${{ env.GIT_COMMIT_MESSAGE_SUBJECT_SANITIZED }}"
    #     echo " - ${{ env.GIT_COMMIT_MESSAGE_BODY }}"

    # - name: Create pull request
    #   uses: peter-evans/create-pull-request@v3



    

    # - name: docker login
    #   env:
    #     DOCKER_USER: ${{ secrets.DOCKER_USER }}
    #     DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    #   run:  |
    #     docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      
    # - name: Build the Docker image
    #   run:  docker build . --file Dockerfile --tag werneroscar/amalitech-test-repo:1.0.0

    # - name: Docker Push
    #   run:  docker push ${{ secrets.DOCKER_USER }}/amalitech-test-repo:1.0.0
